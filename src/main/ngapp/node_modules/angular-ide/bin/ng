#!/usr/bin/env node
require('../lib/windowsPathResolvePatch')();

const path = require('path');
const semver = require('semver');

const getNGCLIManifest = require('../lib/CLUtils').getNGCLIManifest;
const getNGCLIPath = require('../lib/CLUtils').getNGCLIPath;

const ngCLIPKG = getNGCLIManifest();

const TAG = '[angular-ide]';

if (ngCLIPKG) {
  const normalizePackageVersion = require('../lib/CLUtils').normalizePackageVersion;
  const ngCLIPKGName = ngCLIPKG.name;
  const ngCLIPath = getNGCLIPath(ngCLIPKGName);
  ngCLIPKG.version = normalizePackageVersion(ngCLIPKG.version);

  if ((semver.satisfies(ngCLIPKG.version, '>=1.0.0-beta.25') ||
    semver.satisfies(ngCLIPKG.version, '>=1.0.0') ||
    semver.satisfies(ngCLIPKG.version, '>=1.1.0-beta') ||
    semver.satisfies(ngCLIPKG.version, '>=1.2.0-beta') ||
    semver.satisfies(ngCLIPKG.version, '>=1.3.0-beta') ||
    semver.satisfies(ngCLIPKG.version, '>=1.4.0-beta'))
  ) {
    if (
      semver.satisfies(ngCLIPKG.version, '>=1.1.1') ||
      semver.satisfies(ngCLIPKG.version, '>=1.2.0-beta.1')|| 
      semver.satisfies(ngCLIPKG.version, '>=1.3.0-beta') ||
      semver.satisfies(ngCLIPKG.version, '>=1.4.0-beta') 
    ) {
      const CLI = require(path.normalize(path.resolve(__dirname, `../../${ngCLIPath}/ember-cli/lib/cli/cli`)));
      CLI.prototype.originalRun = CLI.prototype.run;

      CLI.prototype.run = function monkeyRun(environment) {
        environment.commands['serve'] = require('../addon/commands/serve');

        return CLI.prototype.originalRun.apply(this, arguments);
      };

    } else {
      const Project = require(path.normalize(path.resolve(__dirname, `../../${ngCLIPath}/ember-cli/lib/models/project`)));

      Project.prototype.originalInitializeAddons = Project.prototype.initializeAddons;

      Project.prototype.initializeAddons = function monkeyInitializeAddons() {
        this.originalInitializeAddons();

        const cliPkg = require(path.resolve(__dirname, '../package.json'));
        const Addon = require(`../../${ngCLIPath}/ember-cli/lib/models/addon`);
        const angularIDEPath = path.join(__dirname, '../../angular-ide');
        const Constructor = Addon.lookup({
          name: 'angular-ide',
          path: angularIDEPath,
          pkg:  cliPkg,
        });

        const addon = new Constructor(this.addonParent, this);
        this.addons.push(addon);
      };
    }

    // run original ng serve
    require(`${ngCLIPath}/bin/ng`);
  } else {
    console.log(TAG, 'Required version not satisfied, doing nothing!');
  }
} else {
  console(TAG, 'Unable to detect Angular CLI!!!');
}