{"version":3,"sources":["../src/RxFP.js"],"names":[],"mappings":";;;;AAIA;;;;;;;AAEA;;;;AACA;;;;AACO,MAAM,oBAAM,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,GAAF,CAAM,IAAN,CAArB,CAAZ;AACA,MAAM,4BAAU,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,OAAF,CAAU,IAAV,CAArB,CAAhB;AACA,MAAM,0CAAiB,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,cAAF,CAAiB,GAAG,IAApB,CAArB,CAAvB;AACA,MAAM,oBAAM,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,GAAF,CAAM,GAAG,IAAT,CAArB,CAAZ;AACA,MAAM,4BAAU,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,KAAmB,EAAE,GAAF,CAAM,GAAG,IAAT,EAAe,IAAf,CAA3B,CAAhB;AACA,MAAM,0BAAS,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,MAAF,CAAS,IAAT,CAArB,CAAf;AACA,MAAM,sDAAuB,KAAK,EAAE,oBAAF,EAAlC;AACA,MAAM,wBAAQ,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,KAAF,CAAQ,IAAR,CAArB,CAAd;AACA,MAAM,sBAAO,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,IAAF,CAAO,IAAP,CAArB,CAAb;AACA,MAAM,8BAAW,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,KAAgB,EAAE,IAAF,CAAO,IAAP,EAAa,CAAb,CAAxB,CAAjB;AACA,MAAM,oCAAc,gBAAE,KAAF,CAAQ,CAAC,KAAD,EAAQ,CAAR,KAAc,EAAE,WAAF,CAAc,KAAd,CAAtB,CAApB;AACA,MAAM,0BAAS,gBAAE,KAAF,CAAQ,CAAC,KAAD,EAAQ,KAAR,KAAkB,eAAE,MAAF,CAAS,KAAT,EAAgB,KAAhB,CAA1B,CAAf;AACA,MAAM,wBAAQ,gBAAE,KAAF,CAAQ,CAAC,GAAD,EAAM,CAAN,KAAY,EAAE,GAAF,CAAM,KAAK,QAAQ,GAAR,CAAY,GAAZ,EAAiB,CAAjB,CAAX,CAApB,CAAd;AACA,MAAM,oBAAM,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,GAAF,CAAM,IAAN,CAArB,CAAZ;AACA,MAAM,wBAAS,CAAD,IAAO,EAAE,KAAF,EAArB;AACA,MAAM,gCAAY,gBAAE,KAAF,CAAQ,CAAC,IAAD,EAAO,CAAP,KAAa,EAAE,SAAF,CAAY,IAAZ,CAArB,CAAlB;AACA,MAAM,wBAAQ,KAAK,EAAE,KAAF,EAAnB;AACA,MAAM,gCAAY,gBAAE,KAAF,CAAQ,CAAC,QAAD,EAAW,CAAX,KAAiB,EAAE,SAAF,CAAY,QAAZ,CAAzB,CAAlB;AACA,MAAM,0BAAS,gBAAE,KAAF,CAAQ,CAAC,GAAD,EAAM,EAAN,KAAa,GAAG,cAAH,CAAkB,GAAG,GAArB,EAA0B,GAA1B,CAA8B,gBAAE,IAAhC,CAArB,CAAf","file":"RxFP.js","sourcesContent":["/**\n * Created by tushar.mathur on 10/06/16.\n */\n\n'use strict'\n\nimport R from 'ramda'\nimport {Observable as O} from 'rx'\nexport const map = R.curry((func, $) => $.map(func))\nexport const flatMap = R.curry((func, $) => $.flatMap(func))\nexport const withLatestFrom = R.curry((list, $) => $.withLatestFrom(...list))\nexport const zip = R.curry((list, $) => $.zip(...list))\nexport const zipWith = R.curry((func, list, $) => $.zip(...list, func))\nexport const filter = R.curry((func, $) => $.filter(func))\nexport const distinctUntilChanged = $ => $.distinctUntilChanged()\nexport const pluck = R.curry((path, $) => $.pluck(path))\nexport const scan = R.curry((func, $) => $.scan(func))\nexport const scanWith = R.curry((func, m, $) => $.scan(func, m))\nexport const shareReplay = R.curry((count, $) => $.shareReplay(count))\nexport const repeat = R.curry((value, count) => O.repeat(value, count))\nexport const trace = R.curry((msg, $) => $.tap(x => console.log(msg, x)))\nexport const tap = R.curry((func, $) => $.tap(func))\nexport const share = ($) => $.share()\nexport const partition = R.curry((func, $) => $.partition(func))\nexport const first = $ => $.first()\nexport const subscribe = R.curry((observer, $) => $.subscribe(observer))\nexport const sample = R.curry((a$$, b$) => b$.withLatestFrom(...a$$).map(R.tail))\n"]}